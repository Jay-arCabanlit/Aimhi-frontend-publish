{"version":3,"sources":["reusable/DocsLink.js","json/dupa.js","views/calibrate/Dupa.js","views/calibrate/TimeSheet.js","views/calibrate/Calibrate.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","dupa","0","Labor","Description","No_Of_Person","Unit","Rate","Amount","Equipment","No_Of_Units","No_Of_Hours","Materials","Quantity","Unit_Cost","Dupa","console","log","data","useState","dupadata","setdupadata","backupData","setbackupData","inputclass","setinputclass","inputdisable","setinputdisable","buttonName","setbuttonName","useEffect","popoverOpen","setPopoverOpen","toggle","InputOnchange","e","scopeIndex","Index","header","Category","newArr","value","EquipmentInputOnchange","MaterialInputOnchange","tbody","map","scope","Total_Labor","Total_Equipment","Total_Material","Direct_Total_Cost","Direct_Unit_Cost","Total_OCM","Total_CP","Total_Vat","Total_Cost","Total_Unit_Cost","labor","DailyRate","TotalRate","style","fontSize","type","onChange","textAlign","color","width","disabled","displayType","thousandSeparator","decimalScale","id","size","data-icon","data-inline","fontWeight","Popover","placement","isOpen","background","PopoverBody","variant","inline","custom","htmlFor","block","equipment","Material","material","marginTop","lg","colSpan","border","borderBottom","borderTop","xs","sm","md","onClick","val","OldArr","EditField","TimeSheet","Calibrate","dupaData","setdupdataData","condition","setcondition","location","state"],"mappings":"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","file":"static/js/22.bcf112c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","const dupa = [\r\n  {\r\n    0: \"PVC Doors and Frames\",\r\n    Labor: [\r\n      {\r\n        Description: \"Carpenter\",\r\n        No_Of_Person: \"1\",\r\n        Unit: \"3\",\r\n        Rate: \"78\",\r\n        Amount: 236,\r\n      },\r\n      {\r\n        Description: \"Laborer\",\r\n        No_Of_Person: \"2\",\r\n        Unit: \"3\",\r\n        Rate: \"60\",\r\n        Amount: 364,\r\n      },\r\n    ],\r\n    Equipment: [\r\n      {\r\n        Description: \"\",\r\n        No_Of_Units: \"\",\r\n        No_Of_Hours: \"\",\r\n        Rate: \"\",\r\n        Amount: 0,\r\n      },\r\n    ],\r\n    Materials: [\r\n      {\r\n        Description: \"0.60M X 2.10M PVC TYPE DOOR\",\r\n        Unit: \"set\",\r\n        Quantity: \"1\",\r\n        Unit_Cost: \"1800\",\r\n        Amount: 1800,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    0: \"Structural Steel\",\r\n    Labor: [\r\n      {\r\n        Description: \"Welder\",\r\n        No_Of_Person: \"3\",\r\n        Unit: \"121\",\r\n        Rate: \"78\",\r\n        Amount: 28593,\r\n      },\r\n      {\r\n        Description: \"Laborer\",\r\n        No_Of_Person: \"5\",\r\n        Unit: \"121\",\r\n        Rate: \"60\",\r\n        Amount: 36759,\r\n      },\r\n    ],\r\n    Equipment: [\r\n      {\r\n        Description: \"Welding Machine\",\r\n        \"No_Of_Units \t\": \"1\",\r\n        No_Of_Hours: \"121\",\r\n        Rate: \"391\",\r\n        Amount: 47311,\r\n      },\r\n    ],\r\n    Materials: [\r\n      {\r\n        Description: \"150mm x50mm x2mm thk C purlins\",\r\n        Unit: \"kgs\",\r\n        Quantity: \"707\",\r\n        Unit_Cost: \"54\",\r\n        Amount: 38215,\r\n      },\r\n      {\r\n        Description: \"16mm dia DRB Anchoraze\",\r\n        Unit: \"kgs\",\r\n        Quantity: \"132\",\r\n        Unit_Cost: \"42\",\r\n        Amount: 5568,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default dupa;\r\n","import React, { lazy, useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n  CFade,\r\n  CSwitch,\r\n  CLink,\r\n  CHeader,\r\n  CFooter,\r\n  CBadge,\r\n  CListGroupItem,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CTabs,\r\n  CTabContent,\r\n  CTabPane,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CFormGroup,\r\n  CLabel,\r\n  CForm,\r\n  CTextarea,\r\n  CPopover,\r\n  CInputRadio,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { DocsLink } from \"src/reusable\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport \"./Calibrate.css\";\r\nimport data from \"../../json/dupa\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport ReactToExcel from \"react-html-table-to-excel\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { element } from \"prop-types\";\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\n\r\nconst Dupa = (props) => {\r\n  console.log(props.data);\r\n  const [dupadata, setdupadata] = useState([]);\r\n  const [backupData, setbackupData] = useState([]);\r\n  const [isEdit, setisEdit] = useState(false);\r\n  const [inputclass, setinputclass] = useState(\"input_outline\");\r\n  const [inputdisable, setinputdisable] = useState(true);\r\n  const [buttonName, setbuttonName] = useState(\"Edit\");\r\n\r\n  useEffect(() => {\r\n    // setdupadata(val.location.state.data);\r\n    // setbackupData(val.location.state.data);\r\n    setdupadata(props.data);\r\n    setbackupData(props.data);\r\n  }, []);\r\n\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n  const InputOnchange = (e, scopeIndex, Index, header, Category) => {\r\n    let newArr = [...dupadata];\r\n\r\n    if (Category == \"Labor\" && header == \"Description\") {\r\n      newArr[scopeIndex].Labor[Index].Description = e.target.value;\r\n    } else if (Category == \"Labor\" && header == \"NoOfPerson\") {\r\n      newArr[scopeIndex].Labor[Index].No_Of_Person = e.target.value;\r\n    } else if (Category == \"Labor\" && header == \"Unit\") {\r\n      newArr[scopeIndex].Labor[Index].Unit = e.target.value;\r\n    } else if (Category == \"Labor\" && header == \"Rate\") {\r\n      newArr[scopeIndex].Labor[Index].Rate = e.target.value;\r\n    }\r\n\r\n    setdupadata(newArr);\r\n  };\r\n\r\n  const EquipmentInputOnchange = (e, scopeIndex, Index, header, Category) => {\r\n    let newArr = [...data];\r\n\r\n    if (Category == \"Equipment\" && header == \"Description\") {\r\n      newArr[scopeIndex].Equipment[Index].Description = e.target.value;\r\n    } else if (Category == \"Equipment\" && header == \"NoOfUnits\") {\r\n      newArr[scopeIndex].Equipment[Index].No_Of_Units = e.target.value;\r\n    } else if (Category == \"Equipment\" && header == \"NoOfHours\") {\r\n      newArr[scopeIndex].Equipment[Index].No_Of_Hours = e.target.value;\r\n    } else if (Category == \"Equipment\" && header == \"Rate\") {\r\n      newArr[scopeIndex].Equipment[Index].Rate = e.target.value;\r\n    }\r\n\r\n    setdupadata(newArr);\r\n  };\r\n\r\n  const MaterialInputOnchange = (e, scopeIndex, Index, header, Category) => {\r\n    let newArr = [...data];\r\n\r\n    if (Category == \"Material\" && header == \"Description\") {\r\n      newArr[scopeIndex].Materials[Index].Description = e.target.value;\r\n    } else if (Category == \"Material\" && header == \"Unit\") {\r\n      newArr[scopeIndex].Materials[Index].Unit = e.target.value;\r\n    } else if (Category == \"Material\" && header == \"Quantity\") {\r\n      newArr[scopeIndex].Materials[Index].Quantity = e.target.value;\r\n    } else if (Category == \"Material\" && header == \"UnitCost\") {\r\n      newArr[scopeIndex].Materials[Index].Unit_Cost = e.target.value;\r\n    }\r\n\r\n    setdupadata(newArr);\r\n  };\r\n\r\n  const EditField = (val) => {\r\n    console.log(\"hello\");\r\n    let OldArr = [...backupData];\r\n\r\n    if (buttonName == \"Edit\") {\r\n      setinputclass(\"input_edit\");\r\n      setinputdisable(false);\r\n      setbuttonName(\"Cancel\");\r\n    } else {\r\n      setdupadata(OldArr);\r\n      setinputclass(\"input_outline\");\r\n      setinputdisable(true);\r\n      setbuttonName(\"Edit\");\r\n    }\r\n  };\r\n\r\n  const tbody = dupadata.map((scope, Index) => {\r\n    let Total_Labor = 0;\r\n    let Total_Equipment = 0;\r\n    let Total_Material = 0;\r\n    let Direct_Total_Cost = 0;\r\n    let Direct_Unit_Cost = 0;\r\n    let Total_OCM = 0;\r\n    let Total_CP = 0;\r\n    let Total_Vat = 0;\r\n    let Total_Cost = 0;\r\n    let Total_Unit_Cost = 0;\r\n    let scopeIndex = Index;\r\n\r\n    const Labor = scope.Labor.map((labor, Index) => {\r\n      console.log(labor.DailyRate, labor.TotalRate);\r\n      Total_Labor += labor.Amount;\r\n      Direct_Total_Cost += labor.Amount;\r\n      let DailyRate = labor.DailyRate;\r\n\r\n      return (\r\n        <tr key={Index} className=\"text-center\" style={{ fontSize: \"14px\" }}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                InputOnchange(e, scopeIndex, Index, \"Description\", \"Labor\")\r\n              }\r\n              value={labor.Description}\r\n              style={{ textAlign: \"center\", color: \"#23303d\", width: \"85%\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                InputOnchange(e, scopeIndex, Index, \"NoOfPerson\", \"Labor\")\r\n              }\r\n              value={labor.No_Of_Person}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                InputOnchange(e, scopeIndex, Index, \"Unit\", \"Labor\")\r\n              }\r\n              value={labor.Unit}\r\n              style={{ textAlign: \"center\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                InputOnchange(e, scopeIndex, Index, \"Rate\", \"Labor\")\r\n              }\r\n              value={labor.Rate}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td className=\"text-left\">\r\n            PHP\r\n            <NumberFormat\r\n              value={labor.Amount}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              decimalScale={2}\r\n            />\r\n            {DailyRate > 0 ? (\r\n              <span>\r\n                <CButton\r\n                  id=\"Popover1\"\r\n                  type=\"button\"\r\n                  color=\"success\"\r\n                  className=\"float-right\"\r\n                  size=\"sm\"\r\n                >\r\n                  <span\r\n                    className=\"iconify\"\r\n                    data-icon=\"eos-icons:ai-operator\"\r\n                    data-inline=\"false\"\r\n                    style={{ fontSize: \"15px\", fontWeight: \"700\" }}\r\n                  ></span>\r\n                </CButton>\r\n                <Popover\r\n                  placement=\"bottom\"\r\n                  isOpen={popoverOpen}\r\n                  target=\"Popover1\"\r\n                  toggle={toggle}\r\n                  style={{\r\n                    background: \"#DCE7DF\",\r\n                    fontSize: \"12px\",\r\n                  }}\r\n                >\r\n                  <PopoverBody>\r\n                    A Php 78.77 daily rate is very low compared to the average.\r\n                    It seems this is an hourly rate. Would you like to\r\n                    re-calculate?\r\n                    <div>\r\n                      <CFormGroup variant=\"custom-radio\" inline>\r\n                        <CInputRadio\r\n                          custom\r\n                          id=\"inline-radio1\"\r\n                          name=\"inline-radios\"\r\n                          value=\"option1\"\r\n                        />\r\n                        <CLabel\r\n                          variant=\"custom-checkbox\"\r\n                          htmlFor=\"inline-radio1\"\r\n                        >\r\n                          Change daily rate to Php{labor.DailyRate}\r\n                        </CLabel>\r\n                      </CFormGroup>\r\n                    </div>\r\n                    <div>\r\n                      <CFormGroup variant=\"custom-radio\" inline>\r\n                        <CInputRadio\r\n                          custom\r\n                          id=\"inline-radio1\"\r\n                          name=\"inline-radios\"\r\n                          value=\"option1\"\r\n                        />\r\n                        <CLabel\r\n                          variant=\"custom-checkbox\"\r\n                          htmlFor=\"inline-radio1\"\r\n                        >\r\n                          Change total to Php{labor.TotalRate}\r\n                        </CLabel>\r\n                      </CFormGroup>\r\n                    </div>\r\n                    <div>\r\n                      <CFormGroup variant=\"custom-radio\" inline>\r\n                        <CInputRadio\r\n                          custom\r\n                          id=\"inline-radio1\"\r\n                          name=\"inline-radios\"\r\n                          value=\"option1\"\r\n                        />\r\n                        <CLabel\r\n                          variant=\"custom-checkbox\"\r\n                          htmlFor=\"inline-radio1\"\r\n                        >\r\n                          Do not change\r\n                        </CLabel>\r\n                      </CFormGroup>\r\n                    </div>\r\n                    <div className=\"align-right\">\r\n                      <CButton color=\"secondary_base\" size=\"sm\" block>\r\n                        save\r\n                      </CButton>\r\n                    </div>\r\n                  </PopoverBody>\r\n                </Popover>\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const Equipment = scope.Equipment.map((equipment, Index) => {\r\n      Total_Equipment += equipment.Amount;\r\n      Direct_Total_Cost += equipment.Amount;\r\n      return (\r\n        <tr key={Index} className=\"text-center\" style={{ fontSize: \"14px\" }}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                EquipmentInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"Description\",\r\n                  \"Equipment\"\r\n                )\r\n              }\r\n              value={equipment.Description}\r\n              style={{ textAlign: \"center\", color: \"#23303d\", width: \"85%\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                EquipmentInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"NoOfUnits\",\r\n                  \"Equipment\"\r\n                )\r\n              }\r\n              value={equipment.No_Of_Units}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                EquipmentInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"NoOfHours\",\r\n                  \"Equipment\"\r\n                )\r\n              }\r\n              value={equipment.No_Of_Hours}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                EquipmentInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"Rate\",\r\n                  \"Equipment\"\r\n                )\r\n              }\r\n              value={equipment.Rate}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td className=\"text-left\">\r\n            PHP\r\n            <NumberFormat\r\n              value={equipment.Amount}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              decimalScale={2}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const Material = scope.Materials.map((material, Index) => {\r\n      Total_Material += material.Amount;\r\n      Direct_Total_Cost += material.Amount;\r\n      return (\r\n        <tr key={Index} className=\"text-center\" style={{ fontSize: \"14px\" }}>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                MaterialInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"Description\",\r\n                  \"Material\"\r\n                )\r\n              }\r\n              value={material.Description}\r\n              style={{ textAlign: \"center\", color: \"#23303d\", width: \"85%\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                MaterialInputOnchange(e, scopeIndex, Index, \"Unit\", \"Material\")\r\n              }\r\n              value={material.Unit}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            {\" \"}\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                MaterialInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"Quantity\",\r\n                  \"Material\"\r\n                )\r\n              }\r\n              value={material.Quantity}\r\n              style={{ textAlign: \"center\", color: \"#23303d\", width: \"85%\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className={inputclass}\r\n              onChange={(e) =>\r\n                MaterialInputOnchange(\r\n                  e,\r\n                  scopeIndex,\r\n                  Index,\r\n                  \"UnitCost\",\r\n                  \"Material\"\r\n                )\r\n              }\r\n              value={material.Unit_Cost}\r\n              style={{ textAlign: \"center\", color: \"#23303d\" }}\r\n              disabled={inputdisable}\r\n            />\r\n          </td>\r\n          <td className=\"text-left\">\r\n            PHP\r\n            <NumberFormat\r\n              value={material.Amount}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              decimalScale={2}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    Direct_Unit_Cost += Direct_Total_Cost / 1;\r\n    Total_OCM += (Direct_Total_Cost / 100) * 15;\r\n    Total_CP += (Direct_Total_Cost / 100) * 10;\r\n    Total_Vat += ((Direct_Unit_Cost + Total_OCM + Total_CP) / 100) * 5;\r\n    Total_Cost += Direct_Unit_Cost + Total_OCM + Total_CP + Total_Vat;\r\n    Total_Unit_Cost += Total_Cost / 1;\r\n\r\n    return (\r\n      <table\r\n        className=\" table table-sm\"\r\n        key={Index}\r\n        style={{ marginTop: \"30px\", textAlign: \"justify\" }}\r\n      >\r\n        <tbody key={Index} lg=\"12\">\r\n          <tr className=\"table-borderless\" style={{ marginTop: \"20px\" }}>\r\n            <td colSpan=\"5\">\r\n              <span\r\n                style={{\r\n                  fontWeight: \"700\",\r\n                  fontSize: \"16px\",\r\n                }}\r\n              >\r\n                {scope[0]}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr\r\n            className=\"text-center\"\r\n            style={{\r\n              background: \"#F4F4F7\",\r\n              fontWeight: \"600\",\r\n              fontSize: \"14px\",\r\n              border: \"none\",\r\n            }}\r\n          >\r\n            <td>Designation</td>\r\n            <td>No of Person</td>\r\n            <td>Unit</td>\r\n            <td>Rate</td>\r\n            <td className=\"text-left\">Amount</td>\r\n          </tr>\r\n          <tr\r\n            style={{\r\n              // background: \"#F4F4F7\",\r\n              fontWeight: \"600\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            <td colSpan=\"4\">Labor</td>\r\n            <td colSpan=\"1\" style={{ textAlign: \"left\" }}>\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_Labor}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n          {Labor}\r\n          <tr\r\n            className=\"text-center\"\r\n            style={{\r\n              background: \"#F4F4F7\",\r\n              fontWeight: \"600\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            <td>Description</td>\r\n            <td>No of Units</td>\r\n            <td>Not of Hours</td>\r\n            <td>Rate</td>\r\n            <td className=\"text-left\">Amount</td>\r\n          </tr>\r\n          <tr\r\n            style={{\r\n              // background: \"#F4F4F7\",\r\n              fontWeight: \"600\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            <td colSpan=\"4\">Equipment</td>\r\n            <td colSpan=\"1\" style={{ textAlign: \"left\" }}>\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_Equipment}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n          {Equipment}\r\n          <tr\r\n            className=\"text-center\"\r\n            style={{\r\n              background: \"#F4F4F7\",\r\n              fontWeight: \"600\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            <td>Description</td>\r\n            <td>Units</td>\r\n            <td>Quantity</td>\r\n            <td>Unit Cost</td>\r\n            <td className=\"text-left\">Amount</td>\r\n          </tr>\r\n          <tr\r\n            style={{\r\n              // background: \"#F4F4F7\",\r\n              fontWeight: \"600\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            <td colSpan=\"4\">Material</td>\r\n            <td colSpan=\"1\" style={{ textAlign: \"left\" }}>\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_Material}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n          {Material}\r\n\r\n          <tr style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">Direct Total Cost</td>\r\n            <td colSpan=\"1\">A + B + C</td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Direct_Total_Cost}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className=\"table-borderless\" style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">Direct Unit Cost</td>\r\n            <td colSpan=\"1\">D / Quantity</td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Direct_Unit_Cost}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className=\"table-borderless\" style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">\r\n              Overhead, contingencies, and miscellaneous (OCM)\r\n            </td>\r\n            <td colSpan=\"1\">15.00% of D</td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_OCM}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className=\"table-borderless\" style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">Contractor’s Profit (CP)</td>\r\n            <td colSpan=\"1\">10.00% of D</td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_CP}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className=\"table-borderless\" style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">Value Added Tax (VAT)</td>\r\n            <td colSpan=\"1\">5% of (D + F + G)</td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_Vat}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className=\"table-borderless\" style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">Total Cost</td>\r\n            <td colSpan=\"1\">D + F + G + H </td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_Cost}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n\r\n          <tr className=\"table-borderless\" style={{ fontSize: \"14px\" }}>\r\n            <td colSpan=\"3\">Total Unit Cost</td>\r\n            <td colSpan=\"1\">I / Quantity</td>\r\n            <td colSpan=\"1\" className=\"text-right\">\r\n              PHP\r\n              <NumberFormat\r\n                value={Total_Unit_Cost}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                decimalScale={2}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr className=\"table-borderless\">\r\n            <td> </td>\r\n          </tr>\r\n          <tr className=\"table-borderless\">\r\n            <td> </td>\r\n          </tr>\r\n          <tr>\r\n            <td\r\n              colSpan=\"6\"\r\n              style={{\r\n                borderBottom: \"5px solid #549764\",\r\n                borderTop: \"1px solid white\",\r\n              }}\r\n            ></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"7\" lg=\"7\">\r\n          <h3 style={{ fontSize: \"18px\" }}>Calibrate your data</h3>\r\n          <span style={{ fontSize: \"12px\" }}>\r\n            Calibrate the data uploaded. Correct the information or match it to\r\n            accordingly. Sunt et maiores optio et similique accusantium quisquam\r\n            provident quo. Labore autem sit inventore. Tenetur vitae est quia.\r\n          </span>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"9\" lg=\"9\"></CCol>\r\n        <CCol sm=\"12\" md=\"3\" lg=\"3\" className=\"float-lg-right\">\r\n          <CRow>\r\n            <CCol md=\"6\" sm=\"12\">\r\n              <CButton\r\n                color=\"secondary_base\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => EditField(true)}\r\n                // active\r\n                block\r\n              >\r\n                {buttonName}\r\n              </CButton>\r\n            </CCol>\r\n            <CCol md=\"6\" sm=\"12\">\r\n              <CButton color=\"secondary_base\" size=\"sm\" block>\r\n                Save\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n        </CCol>\r\n        <CCol sm=\"4\" md=\"12\" lg=\"12\">\r\n          {tbody}\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dupa;\r\n","import React, { lazy, useState, useEffect } from \"react\";\r\n\r\nconst TimeSheet = () => {\r\n  return <h1>Time Sheet</h1>;\r\n};\r\n\r\nexport default TimeSheet;\r\n","import React, { lazy, useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n  CFade,\r\n  CSwitch,\r\n  CLink,\r\n  CHeader,\r\n  CFooter,\r\n  CBadge,\r\n  CListGroupItem,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CTabs,\r\n  CTabContent,\r\n  CTabPane,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CFormGroup,\r\n  CLabel,\r\n  CForm,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { DocsLink } from \"src/reusable\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport \"./Calibrate.css\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport ReactToExcel from \"react-html-table-to-excel\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport { element } from \"prop-types\";\r\nimport Dupa from \"./Dupa\";\r\nimport TimeSheet from \"./TimeSheet\";\r\n\r\nconst Calibrate = (val) => {\r\n  console.log(val);\r\n\r\n  const [dupaData, setdupdataData] = useState([]);\r\n  const [condition, setcondition] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setdupdataData(val.location.state.data);\r\n    setcondition(val.location.state.condition);\r\n  });\r\n\r\n  return <>{condition == \"Dupa\" ? <Dupa data={dupaData} /> : <TimeSheet />}</>;\r\n};\r\n\r\nexport default Calibrate;\r\n"],"sourceRoot":""}